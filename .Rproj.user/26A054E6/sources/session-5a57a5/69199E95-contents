# Caleb Skinner
# March 25, 2024
# Applied Time Series Analysis

# HW9

library("mlbench")
library("tidymodels")
library("janitor")

# Problem 1
# In the mlbench R package, there is a dataset called BreastCancer.
# In this dataset, we want to predict whether the patient's biopsy is benign or malignant.
# Fit a logistic regression model using tidymodels in R or scikit-learn in Python.

# load in data, filtering out NAs, and setting predictors as doubles
data(BreastCancer)
breast_cancer <- BreastCancer %>% clean_names() %>%
  as_tibble() %>% select(-id) %>% filter(!is.na(bare_nuclei)) %>%
  mutate(across(cl_thickness:mitoses, ~as.numeric(.x)))

# benign is assigned a value of 0, and malignant is assigned a value of 1
levels(default$default)

# create a test-train split, five folds and 75% in training
set.seed(1)
bc_split <- breast_cancer %>% initial_split(prop = .75, strata = class)
bc_train <- training(bc_split)
bc_test <- testing(bc_split)
bc_folds <- vfold_cv(bc_train, v = 5, strata = class)

# creating model
log_model <- logistic_reg() %>%
  set_engine("glm") %>%
  set_mode("classification")

# creating recipe, normalizing data
bc_rec <- recipe(class ~ ., data = bc_train) %>%
  step_normalize(all_numeric_predictors()) %>%
  step_dummy(all_nominal_predictors())

# training model
bc_fit <- workflow() %>%
  add_recipe(bc_rec) %>%
  add_model(log_model) %>%
  fit(data = bc_train)

# summarizing model
# I find that the cell thickness, marginal adhesion, and bare nuclei
# are all significant and have meaningful coefficients
tidy(bc_fit)

# odds ratio
# The odds ratio makes the coefficients more interpretable.
# If the cell thickness increases by 1, for example, the likelihood of the breast
# cancer cell being malignant increases by 324%.
# The other coefficients have similar interpretations.
tidy(bc_fit, exponentiate = TRUE)

# evaluating model
predictions <- augment(bc_fit, new_data = bc_test)

# accuracy = .977
metrics(predictions, truth = class, estimate = .pred_class)
conf_mat(predictions, truth = class, estimate = .pred_class)

# roc curve, it looks very strong
predictions %>% 
  roc_curve(truth = class, .pred_benign) %>% 
  autoplot()

# auc is .998. Very very good
predictions %>% 
  roc_auc(truth = class, .pred_benign)


