customer <- read_csv("CustomerChurn.csv") %>%
clean_names()
library("tidyverse")
library("tidymodels")
library("janitor")
library("tidyverse")
library("tidymodels")
library("janitor")
customer <- read_csv("CustomerChurn.csv") %>%
clean_names()
customer %>% glimpse()
customer <- read_csv("CustomerChurn.csv") %>%
clean_names() %>%
select(-customer_id, -surname)
customer %>% glimpse()
# split data
set.seed(1128)
# load in data
customer <- read_csv("CustomerChurn.csv") %>%
clean_names() %>%
select(-customer_id, -surname) %>%
na.omit()
customer_split <- intial_split(customer, prop = .75)
library("tidymodels")
customer_split <- initial_split(customer, prop = .75)
customer_train <- training(customer_split)
customer_test <- testing(customer_split)
# split data
set.seed(1128)
customer_split <- initial_split(customer, prop = .75, strata = exited)
customer_train <- training(customer_split)
customer_test <- testing(customer_split)
set.seed(1128)
customer_split <- initial_split(customer, prop = .75, strata = exited)
customer_train <- training(customer_split)
customer_test <- testing(customer_split)
customer_folds <- vfold_cv(customer_train, v = 5, strata = exited)
svm_model <- svm_linear(cost = tune()) %>%
set_engine("kernlab") %>%
set_mode("classification")
customer_rec <- recipe(exited ~ ., data = customer_train) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors())
customer
tuning_grid <- grid_regular(
cost(),
levels = 20)
customer_wf <- workflow() %>%
add_recipe(customer_rec) %>%
add_model(svm_model)
tune_results <- tune_grid(
object = customer_wf,
resamples = customer_folds,
grid = tuning_grid,
metrics = metric_set(accuracy))
tuning_grid <- grid_regular(
cost(),
levels = 20))
customer_wf <- workflow() %>%
add_recipe(customer_rec) %>%
add_model(svm_model)
tuning_grid <- grid_regular(
cost(),
levels = 20))
tune_results <- tune_grid(
object = customer_wf,
resamples = customer_folds,
grid = tuning_grid,
metrics = metric_set(accuracy))
customer_folds <- vfold_cv(customer_train, v = 5, strata = exited)
svm_model <- svm_linear(cost = tune()) %>%
set_engine("kernlab") %>%
set_mode("classification")
customer_rec <- recipe(exited ~ ., data = customer_train) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors())
customer_wf <- workflow() %>%
add_recipe(customer_rec) %>%
add_model(svm_model)
tuning_grid <- grid_regular(
cost(),
levels = 20))
tuning_grid <- grid_regular(
cost(),
levels = 20)
tune_results <- tune_grid(
object = customer_wf,
resamples = customer_folds,
grid = tuning_grid,
metrics = metric_set(accuracy))
customer
customer %>% glimpse()
# load in data
customer <- read_csv("CustomerChurn.csv") %>%
clean_names() %>%
select(-customer_id, -surname) %>%
mutate(exited = factor(exited)) %>%
na.omit()
set.seed(1128)
customer_split <- initial_split(customer, prop = .75, strata = exited)
customer_train <- training(customer_split)
customer_test <- testing(customer_split)
customer_folds <- vfold_cv(customer_train, v = 5, strata = exited)
svm_model <- svm_linear(cost = tune()) %>%
set_engine("kernlab") %>%
set_mode("classification")
customer_rec <- recipe(exited ~ ., data = customer_train) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors())
customer_wf <- workflow() %>%
add_recipe(customer_rec) %>%
add_model(svm_model)
tuning_grid <- grid_regular(
cost(),
levels = 20)
tune_results <- tune_grid(
object = customer_wf,
resamples = customer_folds,
grid = tuning_grid,
metrics = metric_set(accuracy))
source("~/Desktop/Rock Chucks/Baylor/8th Semester/Time Series/Project/Time-Series-Project2/Support_Vector_Machine.R")
library("tidyverse")
library("tidymodels")
library("janitor")
# load in data
customer <- read_csv("CustomerChurn.csv") %>%
clean_names() %>%
select(-customer_id, -surname) %>%
mutate(
exited = factor(exited)) %>%
na.omit()
customer %>% glimpse()
# load in data
customer <- read_csv("CustomerChurn.csv") %>%
clean_names() %>%
select(-customer_id, -surname) %>%
mutate(
exited = factor(exited),
has_cr_card = factor(has_cr_card),
is_active_member = factor(is_active_member)) %>%
na.omit()
customer
set.seed(1128)
customer_split <- initial_split(customer, prop = .75, strata = exited)
customer_train <- training(customer_split)
customer_test <- testing(customer_split)
set.seed(1128)
customer_folds <- vfold_cv(customer_train, v = 5, strata = exited)
svm_model <- svm_linear(cost = tune()) %>%
set_engine("kernlab") %>%
set_mode("classification")
customer_rec <- recipe(exited ~ ., data = customer_train) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors())
customer_wf <- workflow() %>%
add_recipe(customer_rec) %>%
add_model(svm_model)
tuning_grid <- grid_regular(
cost(),
levels = 20)
tune_results <- tune_grid(
object = customer_wf,
resamples = customer_folds,
grid = tuning_grid,
metrics = metric_set(accuracy))
library("tidyverse")
library("tidymodels")
library("janitor")
# load in data
customer <- read_csv("CustomerChurn.csv") %>%
clean_names() %>%
select(-customer_id, -surname) %>%
mutate(
exited = factor(exited),
has_cr_card = factor(has_cr_card),
is_active_member = factor(is_active_member)) %>%
na.omit()
set.seed(1128)
customer_split <- initial_split(customer, prop = .75, strata = exited)
customer_train <- training(customer_split)
customer_test <- testing(customer_split)
set.seed(1128)
customer_folds <- vfold_cv(customer_train, v = 5, strata = exited)
svm_model <- svm_linear(cost = tune()) %>%
set_engine("kernlab") %>%
set_mode("classification")
customer_rec <- recipe(exited ~ ., data = customer_train) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors())
